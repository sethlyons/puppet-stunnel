define stunnel::service (
  String $accept,
  Array $connect,
  Optional[String] $capath = undef,
  Optional[String] $cafile = undef,
  Optional[String] $cert = undef,
  Optional[String] $checkemail = undef,
  Optional[String] $checkhost = undef,
  Optional[String] $checkip = undef,
  Optional[Array] $ciphers = undef,
  Optional[Boolean] $client = undef,
  Optional[String] $config = undef,
  Optional[String] $crlpath = undef,
  Optional[String] $crlfile = undef,
  Optional[String] $curve = undef,
  Optional[String] $debug = undef,
  Optional[Boolean] $delay = undef,
  Optional[String] $engineid = undef,
  Optional[String] $enginenum = undef,
  Optional[String] $exec = undef,
  Optional[String] $execargs = undef,
  Optional[Enum['rr', 'prio']] $failover = undef,
  Optional[String] $ident = undef,
  Optional[String] $key = undef,
  Optional[String] $libwrap = undef,
  Optional[String] $local = undef,
  Optional[Enum['seqeuntial', 'unique', 'thread', 'process']] $logid = undef,
  Optional[String] $ocsp = undef,
  Optional[String] $ocspaia = undef,
  Optional[String] $ocspflag = undef,
  Optional[String] $ocspnonce = undef,
  Optional[Array] $options = undef,
  Optional[Enum['cifs', 'connect', 'imap', 'nntp', 'pgsql', 'pop3', 'proxy', 'smtp', 'socks']] $protocol = undef,
  Optional[String] $protocolauthentication = undef,
  Optional[String] $protocoldomain = undef,
  Optional[String] $protocolhost = undef,
  Optional[String] $protocolpassword = undef,
  Optional[String] $protocolusername = undef,
  Optional[String] $pskidentity = undef,
  Optional[String] $psksecrets = undef,
  Optional[Boolean] $pty = undef,
  Optional[String] $redirect = undef,
  Boolean $renegotiation = true,
  Boolean $reset = true,
  Optional[Boolean] $retry = undef,
  Optional[Boolean] $requirecert = undef,
  Optional[String] $setgid = undef,
  Optional[String] $setuid = undef,
  Optional[String] $sessioncachesize = undef,
  Optional[String] $sessioncachetimeout = undef,
  Optional[String] $sessiond = undef,
  Optional[String] $sni = undef,
  Optional[Array] $sslversion = undef,
  Optional[String] $stack = undef,
  Optional[String] $timeoutbusy = undef,
  Optional[String] $timeoutclose = undef,
  Optional[String] $timeoutconnect = undef,
  Optional[String] $timeoutidle = undef,
  Optional[Enum['none', 'source', 'destination', 'both', 'yes', 'no']] $transparent = undef,
) {

  # stunnel must be include first in order for this to work
  if ! defined(Class['stunnel']) {
    fail('stunnel must be included before using stunnel::service')
  }

  file { "${stunnel::config_dir}/${title}.conf":
    ensure                     => file,
    owner                      => $stunnel::owner,
    group                      => $stunnel::group,
    mode                       => '0644',
    content                    => epp('stunnel/service.epp', {
      "accept"                 => $accept,
      "capath"                 => $capath,
      "cafile"                 => $cafile,
      "cert"                   => $cert,
      "checkemail"             => $checkemail,
      "checkhost"              => $checkhost,
      "checkip"                => $checkip,
      "ciphers"                => $ciphers,
      "client"                 => $client,
      "config"                 => $config,
      "connect"                => $connect,
      "crlpath"                => $crlpath,
      "crlfile"                => $crlfile,
      "curve"                  => $curve,
      "debug"                  => $debug,
      "delay"                  => $delay,
      "engineid"               => $engineid,
      "enginenum"              => $enginenum,
      "exec"                   => $exec,
      "execargs"               => $execargs,
      "failover"               => $failover,
      "ident"                  => $ident,
      "key"                    => $key,
      "libwrap"                => $libwrap,
      "local"                  => $local,
      "logid"                  => $logid,
      "ocsp"                   => $ocsp,
      "ocspaia"                => $ocspaia,
      "ocspflag"               => $ocspflag,
      "ocspnonce"              => $ocspnonce,
      "options"                => $options,
      "protocol"               => $protocol,
      "protocolauthentication" => $protocolauthentication,
      "protocoldomain"         => $protocoldomain,
      "protocolhost"           => $protocolhost,
      "protocolpassword"       => $protocolpassword,
      "protocolusername"       => $protocolusername,
      "pskidentity"            => $pskidentity,
      "psksecrets"             => $psksecrets,
      "pty"                    => $pty,
      "redirect"               => $redirect,
      "renegotiation"          => $renegotiation,
      "reset"                  => $reset,
      "retry"                  => $retry,
      "requirecert"            => $requirecert,
      "setgid"                 => $setgid,
      "setuid"                 => $setuid,
      "sessioncachesize"       => $sessioncachesize,
      "sessioncachetimeout"    => $sessioncachetimeout,
      "sessiond"               => $sessiond,
      "sni"                    => $sni,
      "sslversion"             => $sslversion,
      "stack"                  => $stack,
      "timeoutbusy"            => $timeoutbusy,
      "timeoutclose"           => $timeoutclose,
      "timeoutconnect"         => $timeoutconnect,
      "timeoutidle"            => $timeoutidle,
      "title"                  => $title,
      "transparent"            => $transparent,
    }),
  }
}
